@model LoggerPagingViewModel

@{
    ViewData["Title"] = "Saved operations";
}

<h2>@ViewData["Title"]</h2>

<br />
<div class="container-fluid">
    <div class="row">
        <form method="get">
            <div class="col-md-2">
                <input class="form-control" type="text" name="search" value="@Model.Search" placeholder="Username..." />
            </div>
            <div class="col-md-2">
                <input class="btn btn-primary" type="submit" value="Search logs" />
            </div>
        </form>
    </div>
    <hr />
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        Date
                    </th>
                    <th>
                        Username
                    </th>
                    <th>
                        Controller name
                    </th>
                    <th>
                        Action name
                    </th>
                    <th>
                        Exception type
                    </th>
                    <th>
                        Exception message
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var log in Model.Logs)
                {
                <tr>
                    <td>
                        @log.Date.ToLocalTime()
                    </td>
                    <td>
                        @log.Username
                    </td>
                    <td>
                        @log.ControllerName
                    </td>
                    <td>
                        @log.ActionName.ToLower()
                    </td>
                    <td>
                        @(log.ExceptionType == null ? "N/A" : log.ExceptionType)
                    </td>
                    <td>
                        @(log.ExceptionMessage == null ? "N/A" : log.ExceptionMessage)
                    </td>
                </tr>
                }
            </tbody>
        </table>
    @{
        var searchQuery = Model.Search != null ? "&search=" + Model.Search : string.Empty;
        var previousDisabled = Model.CurrentPage == 1 ? "disabled" : string.Empty;
        var nextDisabled = Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty;
    }
    <ul class="pagination pagination-lg">
        <li class="page-item @previousDisabled">
            <a class="page-link  @previousDisabled" href="all?page=@Model.PreviousPage@searchQuery" aria-label="Previous">
                <span aria-hidden="true">«</span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)"><a class="page-link" href="all?page=@i@searchQuery">@i</a></li>
        }
        <li class="page-item @nextDisabled">
            <a class="page-link @nextDisabled" href="all?page=@Model.NextPage@searchQuery" aria-label="Next">
                <span aria-hidden="true">»</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
    </ul>
</div>
